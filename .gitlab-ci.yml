include:
  - project: 'papers/papers-internal/internal'
    file: '/.base-gitlab-ci.yml'

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DOCKERHUB_TAG: airgapdocker/beacon-node:$CI_COMMIT_SHA
  DOCKERHUB_TAG_LATEST: airgapdocker/beacon-node:latest

stages:
  - build
  - publish
  - deploy
  - provision

build:
  stage: build
  script:
    - docker build -t $DOCKERHUB_TAG ./docker/

.publish-base:
  stage: publish
  before_script:
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASSWORD"
  script:
    - docker tag $DOCKERHUB_TAG $SECOND_TAG
    - docker push $DOCKERHUB_TAG
    - docker push $SECOND_TAG

publish:
  extends: .publish-base
  variables:
      SECOND_TAG: $DOCKERHUB_TAG_LATEST
  only:
    - master
    - development

publish-tag:
  extends: .publish-base
  variables:
      SECOND_TAG: airgapdocker/beacon-node:$CI_COMMIT_TAG
  only:
    - tags


k8s-deploy-production:
  stage: deploy
  only:
    - master
  when: manual
  image: google/cloud-sdk
  before_script:
    - echo $GCLOUD_GOOGLE_KEY > key.json
    - gcloud auth activate-service-account $GCLOUD_ACCOUNT --key-file key.json
    - gcloud config set account $GCLOUD_ACCOUNT
    - gcloud config set project $GCLOUD_PROJECT
    - gcloud config set compute/zone $GCLOUD_ZONE
    - gcloud container clusters get-credentials papers-cluster-production
  script:
    - sed -i "s|_TO_BE_REPLACED_BY_IMAGE_TAG_|"$DOCKERHUB_TAG"|g" k8s/common/synapse/deployment.yaml
    - sed -i "s|_TO_BE_REPLACED_BY_PROD_DB_HOST_|"$PROD_DB_HOST"|g" k8s/production/secret.yaml
    - sed -i "s|_TO_BE_REPLACED_BY_PROD_DB_PASS_|"$PROD_DB_PASS"|g" k8s/production/secret.yaml
    - sed -i "s|_TO_BE_REPLACED_BY_PROD_DB_NAME_|"$PROD_DB_NAME"|g" k8s/production/secret.yaml
    - sed -i "s|_TO_BE_REPLACED_BY_PROD_DB_USER_|"$PROD_DB_USER"|g" k8s/production/secret.yaml
    - sed -i "s|_TO_BE_REPLACED_BY_PROD_SIGNING_KEY_|$PROD_SIGNING_KEY|g" k8s/production/secret.yaml

    - kubectl apply -f ./k8s/common/namespace.yaml
    - kubectl apply -f ./k8s/common/ --recursive
    - kubectl apply -f ./k8s/production/ --recursive

  tags:
    - docker

k8s-deploy-development:
  stage: deploy
  only:
    - master
  when: manual
  image: google/cloud-sdk
  before_script:
    - echo $GCLOUD_GOOGLE_KEY > key.json
    - gcloud auth activate-service-account $GCLOUD_ACCOUNT --key-file key.json
    - gcloud config set account $GCLOUD_ACCOUNT
    - gcloud config set project $GCLOUD_PROJECT
    - gcloud config set compute/zone $GCLOUD_ZONE_DEVELOPMENT
    - gcloud container clusters get-credentials papers-cluster-development
  script:
    - sed -i "s|_TO_BE_REPLACED_BY_IMAGE_TAG_|"$DOCKERHUB_TAG"|g" k8s/common/synapse/deployment.yaml
    - sed -i "s|_TO_BE_REPLACED_BY_DEV_DB_HOST_|"$DEV_DB_HOST"|g" k8s/development/secret.yaml
    - sed -i "s|_TO_BE_REPLACED_BY_DEV_DB_PASS_|"$DEV_DB_PASS"|g" k8s/development/secret.yaml
    - sed -i "s|_TO_BE_REPLACED_BY_DEV_DB_NAME_|"$DEV_DB_NAME"|g" k8s/development/secret.yaml
    - sed -i "s|_TO_BE_REPLACED_BY_DEV_DB_USER_|"$DEV_DB_USER"|g" k8s/development/secret.yaml
    - sed -i "s|_TO_BE_REPLACED_BY_DEV_SIGNING_KEY_|$DEV_SIGNING_KEY|g" k8s/development/secret.yaml

    - kubectl apply -f ./k8s/common/namespace.yaml
    - kubectl apply -f ./k8s/common/ --recursive
    - kubectl apply -f ./k8s/development/ --recursive

  tags:
    - docker

provision-db-development:
  stage: provision
  only:
    - develop
    - master
  when: manual
  image: google/cloud-sdk
  before_script:
    - echo $GCLOUD_GOOGLE_KEY > key.json
    - gcloud auth activate-service-account $GCLOUD_ACCOUNT --key-file key.json
    - gcloud config set account $GCLOUD_ACCOUNT
    - gcloud config set project $GCLOUD_PROJECT
    - gcloud config set compute/zone $GCLOUD_ZONE_DEVELOPMENT
    - gcloud container clusters get-credentials papers-cluster-development
    - export STOLON_PROXY=$(kubectl get pods --all-namespaces | grep stolon-proxy | awk 'NR==1{print $2}')
  script:
    - kubectl exec $STOLON_PROXY --namespace="development-postgresql" -- bash -c "export PGPASSWORD=$PG_DEV_MASTER_PASSWORD && psql --host=localhost --username=$PG_DEV_MASTER_USERNAME postgres -c \"CREATE DATABASE $DB_NAME\""  || true
    - kubectl exec $STOLON_PROXY --namespace="development-postgresql" -- bash -c "export PGPASSWORD=$PG_DEV_MASTER_PASSWORD && psql --host=localhost --username=$PG_DEV_MASTER_USERNAME postgres -c \"CREATE USER $DB_USER WITH ENCRYPTED PASSWORD '$DB_PASS'\""
    - kubectl exec $STOLON_PROXY --namespace="development-postgresql" -- bash -c "export PGPASSWORD=$PG_DEV_MASTER_PASSWORD && psql --host=localhost --username=$PG_DEV_MASTER_USERNAME postgres -c \"GRANT ALL PRIVILEGES ON DATABASE $DB_NAME to $DB_USER\""
  tags:
    - docker

provision-db-production:
  stage: provision
  only:
    - develop
    - master
  when: manual
  image: google/cloud-sdk
  before_script:
    - echo $GCLOUD_GOOGLE_KEY > key.json
    - gcloud auth activate-service-account $GCLOUD_ACCOUNT --key-file key.json
    - gcloud config set account $GCLOUD_ACCOUNT
    - gcloud config set project $GCLOUD_PROJECT
    - gcloud config set compute/zone $GCLOUD_ZONE
    - gcloud container clusters get-credentials papers-cluster-production
    - export STOLON_PROXY=$(kubectl get pods --all-namespaces | grep stolon-proxy | awk 'NR==1{print $2}')
  script:
    - kubectl exec $STOLON_PROXY -- bash -c "export PGPASSWORD=$PG_PROD_MASTER_PASSWORD && psql --host=localhost --username=$PG_PROD_MASTER_USERNAME postgres -c \"CREATE DATABASE $PROD_DB_NAME\""  || true
    - kubectl exec $STOLON_PROXY -- bash -c "export PGPASSWORD=$PG_PROD_MASTER_PASSWORD && psql --host=localhost --username=$PG_PROD_MASTER_USERNAME postgres -c \"CREATE USER $PROD_DB_USER WITH ENCRYPTED PASSWORD '$PROD_DB_PASS'\"" || true
    - kubectl exec $STOLON_PROXY -- bash -c "export PGPASSWORD=$PG_PROD_MASTER_PASSWORD && psql --host=localhost --username=$PG_PROD_MASTER_USERNAME postgres -c \"GRANT ALL PRIVILEGES ON DATABASE $PROD_DB_NAME to $PROD_DB_USER\"" || true
  tags:
    - docker
